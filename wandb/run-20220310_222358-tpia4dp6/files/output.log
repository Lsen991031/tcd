ucf101: 101 classes
Method : OURS
----AGE 11----
current_task  [11, 69]
current_head  73
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet34
Load the Previous Model
Copy the old Model
lambda_0  : [1.0, 0.05958187643906492]
Increment the Model
SplitCosineLinear(
  input_features=512, output_features=219, sigma=tensor([3.8632]), eta=tensor([3.1400])
  (fc1): CosineLinear(input_features=512, output_features=213, sigma=1.0, eta=1.0)
  (fc2): CosineLinear(input_features=512, output_features=6, sigma=1.0, eta=1.0)
)
video number : 182
video number + exemplar : 537
DataLoader Constructed : Train 16
Optimizer Constructed
video number : 182
video number + exemplar : 182
Initialize Cosine Classifier
Computing the class mean vectors...
Traceback (most recent call last):
  File "main.py", line 101, in <module>
    main()
  File "main.py", line 71, in main
    train_i_cl.train_task(args, i, current_task, current_head, class_indexer, model_flow=model_flow, prefix=prefix)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 447, in train_task
    cl_utils.init_cosine_classifier(model,current_task,class_indexer,loader_for_embedding,args)
  File "/home/ustc/ls/tcd_code/cl_methods/cl_utils.py", line 112, in init_cosine_classifier
    cls_embedding, features = compute_class_mean(model,current_task,dloader,class_indexer)
  File "/home/ustc/ls/tcd_code/cl_methods/classifer.py", line 51, in compute_class_mean
    outputs = model(input=input, only_feat=True)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/data_parallel.py", line 162, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 83, in parallel_apply
    raise output
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/parallel_apply.py", line 59, in _worker
    output = module(*input, **kwargs)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ustc/ls/tcd_code/ops/models.py", line 449, in forward
    base_out, int_features = self.base_model(input.view((-1, sample_len) + input.size()[-2:]))
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/ustc/ls/tcd_code/ops/resnet_models.py", line 196, in forward
    print(x.shape())
TypeError: 'torch.Size' object is not callable