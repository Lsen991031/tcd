ucf101: 101 classes
Method : OURS
----AGE 0----
current_task  [37, 97, 56, 55, 33, 84, 3, 4, 72, 59, 66, 48, 65, 91, 99, 39, 34, 22, 67, 74, 19, 35, 9, 86, 88, 63, 85, 38, 54, 25, 57, 62, 83, 76, 6, 13, 2, 53, 8, 24, 44, 12, 100, 29, 5, 17, 15, 73, 47, 27, 46]
current_head  51
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet34
CosineLinear(input_features=512, output_features=153, sigma=tensor([1.]), eta=tensor([1.]))
video number : 4793
video number + exemplar : 4793
DataLoader Constructed : Train 149
Optimizer Constructed
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:61: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
2022-03-10 22:46:41.299011
Epoch: [0][0/149], lr: 0.00100	Time 14.175 (14.175)	Data 1.650 (1.650)	Loss 3.9903 (3.9903)	Loss CE 3.9284 (3.9284)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6193 (0.6193)	Loss REG 0.0000 (0.0000)	Prec@1 3.125 (3.125)
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
*******
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
Traceback (most recent call last):
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
Traceback (most recent call last):
Traceback (most recent call last):
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
Traceback (most recent call last):
Traceback (most recent call last):
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
  File "main.py", line 101, in <module>
    main()
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/queues.py", line 242, in _feed
    send_bytes(obj)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "main.py", line 71, in main
    train_i_cl.train_task(args, i, current_task, current_head, class_indexer, model_flow=model_flow, prefix=prefix)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 200, in send_bytes
    self._send_bytes(m[offset:offset + size])
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 460, in train_task
    _train(args, train_loader, model, criterion, optimizer, epoch, age, regularizer=regularizer, lambda_0=lambda_0, model_old=model_old, importance_list=importance_list)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 404, in _send_bytes
    self._send(header + buf)
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
  File "/home/ustc/anaconda3/envs/lhc/lib/python3.7/multiprocessing/connection.py", line 368, in _send
    n = write(self._handle, buf)
BrokenPipeError: [Errno 32] Broken pipe
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 166, in _train
    if loss_reg != 0:
BrokenPipeError: [Errno 32] Broken pipe
KeyboardInterrupt
BrokenPipeError: [Errno 32] Broken pipe
torch.Size([64, 3, 224, 224])
*******
torch.Size([64, 3, 224, 224])
torch.Size([64, 3, 224, 224])
*******
*******
torch.Size([64, 3, 224, 224])
*******