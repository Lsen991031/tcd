ucf101: 101 classes
creating folder log/ucf101/51/10/010
creating folder checkpoint/ucf101/51/10/010
Method : OURS
----AGE 0----
current_task  [37, 97, 56, 55, 33, 84, 3, 4, 72, 59, 66, 48, 65, 91, 99, 39, 34, 22, 67, 74, 19, 35, 9, 86, 88, 63, 85, 38, 54, 25, 57, 62, 83, 76, 6, 13, 2, 53, 8, 24, 44, 12, 100, 29, 5, 17, 15, 73, 47, 27, 46]
current_head  51
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet50
CosineLinear(input_features=2048, output_features=153, sigma=tensor([1.]), eta=tensor([1.]))
video number : 4793
video number + exemplar : 4793
DataLoader Constructed : Train 1198
Optimizer Constructed
torch.Size([4, 24, 224, 224])
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
2022-09-04 14:28:11.688315
Epoch: [0][0/1198], lr: 0.00100	Time 8.883 (8.883)	Data 0.683 (0.683)	Loss 4.0086 (4.0086)	Loss CE 3.9400 (3.9400)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6861 (0.6861)	Loss REG 0.0000 (0.0000)	Prec@1 0.000 (0.000)
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
Traceback (most recent call last):
  File "main.py", line 102, in <module>
    main()
  File "main.py", line 72, in main
    train_i_cl.train_task(args, i, current_task, current_head, class_indexer, model_flow=model_flow, prefix=prefix)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 524, in train_task
    _train(args, train_loader, model, criterion, optimizer, epoch, age, regularizer=regularizer, lambda_0=lambda_0, model_old=model_old, importance_list=importance_list)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 229, in _train
    if loss_reg != 0:
KeyboardInterrupt
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])
torch.Size([4, 24, 224, 224])