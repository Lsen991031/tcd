ucf101: 101 classes
Method : OURS
----AGE 0----
current_task  [37, 97, 56, 55, 33, 84, 3, 4, 72, 59, 66, 48, 65, 91, 99, 39, 34, 22, 67, 74, 19, 35, 9, 86, 88, 63, 85, 38, 54, 25, 57, 62, 83, 76, 6, 13, 2, 53, 8, 24, 44, 12, 100, 29, 5, 17, 15, 73, 47, 27, 46]
current_head  51
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet34
CosineLinear(input_features=512, output_features=153, sigma=tensor([1.]), eta=tensor([1.]))
video number : 4793
video number + exemplar : 4793
DataLoader Constructed : Train 149
Optimizer Constructed
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:61: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
2022-03-08 14:25:46.189879
Epoch: [0][0/149], lr: 0.00100	Time 12.448 (12.448)	Data 1.542 (1.542)	Loss 3.9903 (3.9903)	Loss CE 3.9284 (3.9284)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6193 (0.6193)	Loss REG 0.0000 (0.0000)	Prec@1 3.125 (3.125)
2022-03-08 14:26:58.678200
Epoch: [0][100/149], lr: 0.00100	Time 0.734 (0.841)	Data 0.000 (0.016)	Loss 3.9829 (3.9906)	Loss CE 3.9226 (3.9284)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6026 (0.6220)	Loss REG 0.0000 (0.0000)	Prec@1 0.000 (2.847)
Sigma : Parameter containing:
tensor([1.0671], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([1.0317], device='cuda:0', requires_grad=True)
Update Importance Mask...
Phase 3 : Manage Exemplar Sets
=> base model: resnet34
Construct Exemplar Set
Load the Model
CosineLinear(input_features=512, output_features=153, sigma=tensor([1.0671]), eta=tensor([1.0317]))
Exemplar per class : 5
video number : 4793
video number + exemplar : 4793
Phase 4 : Class-balanced Fine-Tuning : SKIP
Phase 5 : Eval RGB Model for the Tasks Trained so far
=> base model: resnet34
Load the Trained Model from checkpoint/ucf101/51/2/000/task_000.pth.tar
exemplar : 255
Computing the class mean vectors...
Traceback (most recent call last):
  File "main.py", line 101, in <module>
    main()
  File "main.py", line 92, in main
    len(current_task),prefix=prefix[0], bic_model=bic_model)
  File "/home/ustc/ls/tcd_code/evaluation.py", line 179, in eval_task
    class_means, _ = compute_class_mean(model,current_head,ex_loader,tnme=True if args.tnme else False)
  File "/home/ustc/ls/tcd_code/cl_methods/classifer.py", line 85, in compute_class_mean
    class_mean = torch.mean(features,axis=0)
TypeError: mean() received an invalid combination of arguments - got (Tensor, axis=int), but expected one of:
 * (Tensor input)
 * (Tensor input, torch.dtype dtype)
      didn't match because some of the keywords were incorrect: axis
 * (Tensor input, tuple of ints dim, torch.dtype dtype, Tensor out)
 * (Tensor input, tuple of ints dim, bool keepdim, torch.dtype dtype, Tensor out)
 * (Tensor input, tuple of ints dim, bool keepdim, Tensor out)