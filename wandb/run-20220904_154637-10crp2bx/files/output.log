ucf101: 101 classes
Method : OURS
----AGE 0----
current_task  [37, 97, 56, 55, 33, 84, 3, 4, 72, 59, 66, 48, 65, 91, 99, 39, 34, 22, 67, 74, 19, 35, 9, 86, 88, 63, 85, 38, 54, 25, 57, 62, 83, 76, 6, 13, 2, 53, 8, 24, 44, 12, 100, 29, 5, 17, 15, 73, 47, 27, 46]
current_head  51
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet50
CosineLinear(input_features=2048, output_features=153, sigma=tensor([1.]), eta=tensor([1.]))
video number : 4793
video number + exemplar : 4793
DataLoader Constructed : Train 299
Optimizer Constructed
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/parallel/_functions.py:68: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
2022-09-04 15:46:57.128319
Epoch: [0][0/299], lr: 0.00100	Time 10.700 (10.700)	Data 1.858 (1.858)	Loss 3.9979 (3.9979)	Loss CE 3.9377 (3.9377)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6014 (0.6014)	Loss REG 0.0000 (0.0000)	Prec@1 0.000 (0.000)
2022-09-04 15:47:54.529494
Epoch: [0][100/299], lr: 0.00100	Time 0.575 (0.674)	Data 0.000 (0.019)	Loss 3.9858 (3.9913)	Loss CE 3.9253 (3.9290)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6051 (0.6228)	Loss REG 0.0000 (0.0000)	Prec@1 0.000 (3.589)
2022-09-04 15:48:51.484296
Epoch: [0][200/299], lr: 0.00100	Time 0.563 (0.622)	Data 0.000 (0.009)	Loss 3.9745 (3.9865)	Loss CE 3.9139 (3.9250)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6067 (0.6144)	Loss REG 0.0000 (0.0000)	Prec@1 12.500 (6.468)
Sigma : Parameter containing:
tensor([1.3333], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([1.1741], device='cuda:0', requires_grad=True)
2022-09-04 15:49:50.742196
Epoch: [1][0/299], lr: 0.00100	Time 2.111 (2.111)	Data 1.462 (1.462)	Loss 3.9508 (3.9508)	Loss CE 3.8890 (3.8890)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6184 (0.6184)	Loss REG 0.0000 (0.0000)	Prec@1 31.250 (31.250)
2022-09-04 15:50:47.758947
Epoch: [1][100/299], lr: 0.00100	Time 0.560 (0.585)	Data 0.000 (0.015)	Loss 3.6719 (3.8418)	Loss CE 3.6060 (3.7809)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6586 (0.6095)	Loss REG 0.0000 (0.0000)	Prec@1 31.250 (30.693)
2022-09-04 15:51:44.486369
Epoch: [1][200/299], lr: 0.00100	Time 0.570 (0.576)	Data 0.000 (0.007)	Loss 1.4765 (3.1729)	Loss CE 1.4110 (3.1107)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6547 (0.6218)	Loss REG 0.0000 (0.0000)	Prec@1 56.250 (38.961)
Sigma : Parameter containing:
tensor([3.9442], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([2.9242], device='cuda:0', requires_grad=True)
2022-09-04 15:52:43.874466
Epoch: [2][0/299], lr: 0.00100	Time 2.234 (2.234)	Data 1.388 (1.388)	Loss 1.5412 (1.5412)	Loss CE 1.4806 (1.4806)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6066 (0.6066)	Loss REG 0.0000 (0.0000)	Prec@1 62.500 (62.500)
2022-09-04 15:53:40.875361
Epoch: [2][100/299], lr: 0.00100	Time 0.573 (0.586)	Data 0.000 (0.014)	Loss 0.7402 (1.1608)	Loss CE 0.6810 (1.0972)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.5922 (0.6362)	Loss REG 0.0000 (0.0000)	Prec@1 81.250 (69.802)
2022-09-04 15:54:37.718837
Epoch: [2][200/299], lr: 0.00100	Time 0.562 (0.578)	Data 0.000 (0.007)	Loss 0.6319 (1.0984)	Loss CE 0.5688 (1.0348)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6310 (0.6359)	Loss REG 0.0000 (0.0000)	Prec@1 87.500 (71.549)
Sigma : Parameter containing:
tensor([3.8207], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([2.9642], device='cuda:0', requires_grad=True)
2022-09-04 15:55:36.898651
Epoch: [3][0/299], lr: 0.00100	Time 2.087 (2.087)	Data 1.447 (1.447)	Loss 0.5601 (0.5601)	Loss CE 0.4960 (0.4960)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6406 (0.6406)	Loss REG 0.0000 (0.0000)	Prec@1 81.250 (81.250)
2022-09-04 15:56:34.944791
Epoch: [3][100/299], lr: 0.00100	Time 0.576 (0.595)	Data 0.000 (0.015)	Loss 0.7078 (0.7699)	Loss CE 0.6441 (0.7066)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6371 (0.6335)	Loss REG 0.0000 (0.0000)	Prec@1 81.250 (80.507)
2022-09-04 15:57:32.999324
Epoch: [3][200/299], lr: 0.00100	Time 0.575 (0.588)	Data 0.000 (0.007)	Loss 0.1439 (0.7511)	Loss CE 0.0769 (0.6879)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6703 (0.6323)	Loss REG 0.0000 (0.0000)	Prec@1 100.000 (80.939)
Sigma : Parameter containing:
tensor([3.8076], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([3.0502], device='cuda:0', requires_grad=True)
2022-09-04 15:58:33.074701
Epoch: [4][0/299], lr: 0.00100	Time 2.199 (2.199)	Data 1.398 (1.398)	Loss 0.8389 (0.8389)	Loss CE 0.7754 (0.7754)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6351 (0.6351)	Loss REG 0.0000 (0.0000)	Prec@1 81.250 (81.250)
2022-09-04 15:59:30.891615
Epoch: [4][100/299], lr: 0.00100	Time 0.584 (0.594)	Data 0.000 (0.014)	Loss 0.2787 (0.5696)	Loss CE 0.2169 (0.5067)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6180 (0.6287)	Loss REG 0.0000 (0.0000)	Prec@1 93.750 (86.077)
2022-09-04 16:00:28.643297
Epoch: [4][200/299], lr: 0.00100	Time 0.567 (0.586)	Data 0.000 (0.007)	Loss 0.2694 (0.5735)	Loss CE 0.2021 (0.5108)	Loss KD (Logit) 0.0000 (0.0000)	Loss KD (GCAM) 0.0000 (0.0000)	Loss MR 0.0000 (0.0000)	Loss DIV 0.6731 (0.6269)	Loss REG 0.0000 (0.0000)	Prec@1 100.000 (86.070)
Sigma : Parameter containing:
tensor([3.8396], device='cuda:0', requires_grad=True), Eta : Parameter containing:
tensor([3.1335], device='cuda:0', requires_grad=True)
Update Importance Mask...
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/nn/modules/module.py:1033: UserWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  warnings.warn("Using a non-full backward hook when the forward contains multiple autograd Nodes "
Phase 3 : Manage Exemplar Sets
=> base model: resnet50
Construct Exemplar Set
Load the Model
CosineLinear(input_features=2048, output_features=153, sigma=tensor([3.8396]), eta=tensor([3.1335]))
Exemplar per class : 5
video number : 4793
video number + exemplar : 4793
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torchvision/transforms/transforms.py:333: UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.
  "Argument interpolation should be of type InterpolationMode instead of int. "
Phase 4 : Class-balanced Fine-Tuning : SKIP
Phase 5 : Eval RGB Model for the Tasks Trained so far
=> base model: resnet50
Load the Trained Model from checkpoint/ucf101/51/10/010/task_000.pth.tar
exemplar : 255
Computing the class mean vectors...
Eval Task 0 for Age 0
Current Task : [37, 97, 56, 55, 33, 84, 3, 4, 72, 59, 66, 48, 65, 91, 99, 39, 34, 22, 67, 74, 19, 35, 9, 86, 88, 63, 85, 38, 54, 25, 57, 62, 83, 76, 6, 13, 2, 53, 8, 24, 44, 12, 100, 29, 5, 17, 15, 73, 47, 27, 46]
video number : 1909
video number + exemplar : 1909
DataLoader Constructed
************************target************************ torch.Size([16])
************************target************************ tensor([14, 47, 30, 46, 50, 16, 35, 33, 46, 15, 15, 43, 42, 50, 18,  4],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
Test: [0/120]	Time 13.304 (13.304)	Prec@1 75.000 (75.000)
************************target************************ torch.Size([16])
************************target************************ tensor([48, 29, 41, 21, 14, 17, 36, 28, 15, 21, 18,  6, 32,  5, 42,  3],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([24, 36,  5, 39, 12, 36, 48, 37, 47, 24, 17, 22, 19,  3, 47, 21],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([15, 29, 20, 39, 27, 24, 34, 44, 20, 50, 27,  8, 48, 22, 27, 11],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40, 14, 36,  9, 34, 18,  0, 34, 19, 47,  3, 10, 28,  6, 19, 22],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 9, 24,  6, 13, 15, 17, 20,  9, 19, 17, 12, 48,  7, 36, 50, 31],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([29, 29,  3, 37, 24, 22, 50,  5, 32, 27,  3, 21, 31, 29, 36, 45],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([29, 17, 49, 39, 13, 18, 19, 27, 43,  9,  9,  5, 13, 31, 32, 24],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0, 32, 31, 30,  2, 31, 35,  0, 42, 19,  2, 24, 37, 22,  2, 21],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([14, 21, 44,  1,  6, 34, 11, 27, 47,  9, 43, 15,  8, 50, 19, 12],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([25, 44, 19, 25, 43,  4, 45, 41, 44, 28, 49, 26, 47, 42, 36, 18],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([27, 24, 47, 21,  1, 44, 37, 15, 33, 44, 34, 14, 14,  6, 35, 48],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0,  3, 25, 38,  2, 17, 33, 20, 26, 43,  6, 30, 28,  2, 11, 29],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 4,  6,  2, 31, 20, 24, 33,  7, 35, 14, 12,  8, 25,  6, 32, 14],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([44, 46,  7, 46, 50,  1, 21,  0, 16,  0,  1, 28, 15, 48, 50, 15],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([18,  2, 16,  4, 43, 37, 13, 29, 41, 32, 49, 23,  5,  9, 28, 40],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([17, 24, 26,  2, 48, 13, 24,  9, 22, 27, 47, 35, 34, 25, 38, 50],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([31,  6, 26, 27, 45, 24, 26, 25, 27, 47,  2, 30, 33, 45, 48, 19],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([46, 11, 38, 35,  9, 22, 33, 36, 36, 33, 37, 48, 11, 47, 22,  0],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([43, 13, 29, 23, 49,  7, 49, 41, 49,  1, 32, 49, 41, 18, 13, 12],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40,  4, 34, 47, 12,  5,  7, 22, 42, 13, 22, 36, 22, 31, 25, 36],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([24, 48,  6, 17, 41, 11, 34, 33,  1, 36, 46, 39, 31, 17, 46, 19],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0,  2,  8, 49, 35, 17, 18, 42, 44, 34, 46, 35, 33, 11, 17, 43],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0, 33, 47, 37,  5, 13, 42,  7, 29, 19, 25, 11, 27, 23, 33,  3],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([12, 39, 33, 33, 48, 48, 26, 32, 21, 23,  1, 24, 12, 47, 47, 45],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([18, 43, 18, 46, 43, 27, 21, 47, 45, 38,  1, 44, 17, 18, 20, 33],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([10, 28, 36, 48, 47,  4, 15, 31, 49, 34, 28, 23, 36, 38, 38, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([31, 26, 27, 43,  7, 46,  7, 37, 44, 40, 22, 48, 26, 26, 46, 32],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([11, 38, 37, 24, 33,  9, 39, 40,  8, 37, 21, 46, 47, 31,  3, 40],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([16,  0, 34,  1, 38, 19, 21, 17, 30, 27, 18,  0,  7, 37, 32, 47],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41, 17, 28,  3, 23, 13, 24, 18, 27, 21, 46, 29, 16, 21, 44,  5],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([34, 24, 36,  8, 35, 14, 11, 48, 34,  9, 31,  9, 47,  5,  5, 23],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([14, 35, 31, 16, 12, 12, 41, 23,  0, 29, 17, 35, 37, 20, 14,  8],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([24,  4, 10, 13, 46, 33, 13, 47, 26, 44,  0, 23, 32,  5, 29, 13],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([35, 50, 38, 21, 32, 33, 19, 32, 28, 14, 30, 40, 28, 25, 13, 42],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([29, 32,  0,  4, 40,  3,  9,  9,  2, 20, 34, 31, 28,  0, 41, 43],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([30, 38, 35, 39, 38, 14, 46, 23, 18, 27, 43, 36, 35, 22, 22, 41],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([17, 47, 34, 20,  9, 10, 42, 34, 14, 18, 41, 42, 39, 21, 42, 18],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([37,  8, 48, 10, 49, 22, 26, 21, 36,  1, 46, 42, 10, 30, 15, 38],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([13, 16, 27,  3,  4,  6, 20, 24, 17, 24, 20, 31, 24, 38, 28, 48],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([38, 35, 16, 11, 31, 49,  7, 14, 33, 39, 31, 35, 46, 35,  6, 26],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([45, 45, 21, 41, 36, 14, 28, 15, 16, 49, 24, 42, 39, 43, 46, 34],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41, 47, 46, 20, 47, 28, 29, 45, 13, 44,  3, 27, 45,  3, 22, 46],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([37, 40, 22, 14,  0, 34,  2, 41, 42,  4, 14, 50,  4, 33, 23, 10],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 1,  7, 43, 38, 29, 21, 30, 45, 22,  2, 31,  5, 47, 33, 15, 23],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 4,  5, 15,  9, 26, 41, 50, 21, 13, 29, 41, 46,  8, 33, 21,  2],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([14, 50, 10, 21, 32, 46, 31, 41, 36,  8, 27, 50, 25, 10,  5,  0],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([49, 38, 14, 37, 12, 49, 30,  1,  0, 43, 24, 47, 46, 39, 43, 38],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([20, 17,  6, 23, 31, 37, 27,  7, 37, 18,  2, 33,  8,  0, 30, 11],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 5, 49, 48, 29, 50, 39,  5, 37, 30,  2,  5, 33, 20, 40, 36, 44],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([15, 48, 37, 44, 44,  1,  6, 48, 45, 13, 14, 36, 28,  8,  3,  2],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([36, 11, 12, 22, 28,  2, 13, 50,  3, 50, 26, 31,  1, 27,  3,  0],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 2, 10, 50,  7,  8,  6, 32, 12, 29, 23, 46, 47, 16, 21, 14, 34],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([30, 35, 31, 32, 28, 29,  9, 48, 18, 23, 13, 35, 44, 20, 23, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([18, 33,  1, 13, 43, 21, 39, 19,  0, 36,  4, 25,  1, 34, 22,  4],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([48, 32,  5, 37, 40, 27, 44, 18, 21, 11, 40, 37, 40, 10, 48, 23],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 4, 35, 45,  1,  7,  4, 48, 41, 45, 41, 34, 29, 27, 43, 34,  2],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 43,  4, 10, 42,  4, 46, 13, 33, 39, 49,  2, 49, 50, 25, 11],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([14, 26,  2, 21, 22, 28, 42,  1,  3, 29, 14, 24, 20, 40, 11,  1],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([11, 42, 16, 46, 18, 45, 36, 32, 13, 14, 34, 43, 11, 10, 17, 21],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([21, 16,  8,  2,  3, 12, 23,  1,  4, 47,  7, 16, 30,  5, 25, 45],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([44, 12, 33,  3, 23,  5, 42, 16, 27, 34, 50, 32, 25, 12, 38,  4],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40, 36, 31,  0, 25, 14, 21, 34,  9, 13, 45,  7,  2, 20,  7,  7],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0, 11, 36,  9, 22, 49, 33, 28, 19, 24, 37,  2,  2,  4, 30, 30],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([29, 50,  7, 25, 26, 26, 21, 24, 40, 15, 31, 43, 22, 22, 22, 30],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([15,  5, 38, 45, 11, 24, 28,  9, 46,  0, 44, 16, 34, 44, 13, 21],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([14, 50, 31, 18,  0, 20, 17,  1, 14,  4, 26, 24, 39, 28, 33, 46],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([34, 15, 27, 43, 47,  7, 19, 29, 14,  6, 17, 17, 26, 21, 20, 11],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([17,  1, 42,  3, 26, 17, 14, 28, 43, 35, 42, 38,  9, 15, 32,  8],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41,  9, 28, 15, 41, 30,  2, 22, 39, 29, 12, 16, 43, 46, 19, 15],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([12,  1, 30, 47, 16, 12,  9, 44, 23, 15, 19, 27, 15, 45, 34, 41],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([24,  0, 24, 30, 50, 13, 13, 49, 29, 32, 45,  5,  1, 23, 47, 41],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 13, 25, 34, 41,  3, 15, 32, 45, 32, 22, 17, 36, 27, 18, 45],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([23,  6, 11, 35, 41,  6,  3, 28, 48, 18, 36, 40, 14, 27, 21, 18],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([37, 11, 38, 19,  8, 37, 42, 20,  7,  9, 45,  2,  8,  1, 38, 34],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([20, 30, 12, 50, 11, 31, 36, 21, 48, 41, 38, 43, 29,  5, 37, 13],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([34, 29, 35, 45, 21,  6, 26, 21, 40, 16, 14,  5,  4, 24, 30, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([34, 47, 49, 13, 34, 33, 42, 47, 34, 21,  3, 14, 16,  8, 32,  9],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41, 39,  7, 23, 46, 36, 37, 15, 16,  9, 49,  6, 32, 24, 40, 42],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40, 45, 22, 20, 33, 20, 31, 36,  7, 25, 11, 19, 48, 16, 30, 29],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 1, 44, 20, 20, 12, 27, 13, 21, 27, 44, 13, 44, 47,  6,  2, 46],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([37, 10, 34, 43, 35, 38, 18, 20,  1,  7, 11, 37, 11, 19, 43, 13],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([47, 36, 21, 37,  4, 14, 24,  6, 30, 10, 31, 32, 44, 29, 17, 33],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([28,  0, 10, 29, 16,  4,  1,  9, 36, 24, 33, 39, 35, 44, 44,  3],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([30, 49,  9, 14,  2, 46, 37,  4, 37, 44, 39, 48, 47, 41, 20, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([11, 32, 31, 18, 28, 40, 15,  3, 49, 30, 17,  5, 38, 15, 31,  1],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([33, 32, 14, 36,  3, 20, 37, 17, 46, 44, 10, 39, 34, 30, 31, 16],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 8, 13, 14, 25, 15, 10, 11, 22,  6, 33, 16, 21, 18, 33, 18, 50],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([26, 38,  5, 40, 13, 23,  1,  5, 18, 11, 23, 46, 16, 17, 21, 37],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([31, 29, 11, 50, 36, 13, 35, 11, 48, 27, 13, 22, 43, 48, 38,  5],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([19, 46,  5, 13,  9, 26,  0, 27, 23,  3, 47, 38,  3, 22, 31, 45],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([43, 46, 10, 50, 45, 50, 33, 40, 49, 17, 31, 46, 23, 19, 19, 29],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([45,  6, 39, 13,  3, 24, 18, 13, 31, 37,  8,  5,  6, 46, 41,  9],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([35, 19, 19, 22, 10, 42,  3, 19, 14, 29, 10, 16, 11, 47, 29, 31],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([42,  8, 20, 29, 43, 35, 27, 21, 33, 20, 18, 14, 43,  9, 30, 24],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40, 26, 22, 24, 45, 41, 18, 29, 25, 41, 10, 21, 37,  7, 44, 28],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([15, 39, 26, 24, 27, 30, 15,  7, 12, 39, 40, 39, 17, 10, 29, 14],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41, 13, 44, 42, 23, 22,  5, 19,  5,  6, 34, 35, 23, 27, 36, 33],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 18, 15, 17,  5, 36, 32, 48,  1,  9, 25, 42, 39, 20, 41, 32],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([40, 50, 14, 37, 30, 27, 37, 28, 24, 48, 37,  5, 14, 40, 16, 17],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([45, 37, 45, 36, 44, 42, 25, 39, 46,  0, 32, 44, 38, 22, 22, 38],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
Test: [100/120]	Time 0.679 (1.072)	Prec@1 87.500 (73.391)
************************target************************ torch.Size([16])
************************target************************ tensor([42, 32, 48, 45, 10, 32, 24, 42,  7, 29, 13,  9, 40, 39,  7, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([27,  8, 34, 32, 18,  1, 44, 19,  7, 12,  5,  6,  9, 43, 25, 40],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 5, 22, 16, 20, 35, 33, 33,  6,  8, 47,  3, 50, 40, 45, 31, 15],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([35, 19,  8,  6, 18,  2, 45, 38, 27, 50,  0,  2,  8,  1, 10, 10],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([13,  2, 20, 23,  3, 50, 37, 12, 22,  4,  4,  3, 26, 39, 19, 23],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([34,  9, 28, 25, 31, 11, 12, 19, 25, 29,  9, 46,  1, 13, 36,  6],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([39, 27, 15, 18, 39,  4, 42, 16, 34, 22, 39, 42, 25,  6, 30,  4],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 0, 20,  2, 11, 31, 26, 49,  9, 41,  8, 41, 26,  2, 25, 38, 19],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 30, 27, 15, 23, 17, 24, 33, 32, 36, 23, 40, 15, 30, 11,  4],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 21, 31, 29, 14, 17, 48, 12, 43, 45, 13, 43, 41, 36, 49, 14],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([47, 22,  4, 45, 43,  9, 49, 48, 44, 34, 21, 31, 26,  7, 44, 50],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([50,  6, 38, 13, 34,  6,  1, 13, 18,  0, 46, 22, 37,  1, 31,  5],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([16, 33, 16, 28, 32, 42, 16, 50,  9,  7, 38, 12, 42, 16, 35, 49],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([22, 38, 13,  3, 26, 50,  5, 18,  5, 20,  0,  9, 10, 19, 32, 17],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([ 2, 37, 46, 42, 44, 46,  6, 34, 37, 25, 15, 39, 45, 29, 49,  8],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([44,  6,  8, 12, 15, 48, 35, 28, 47, 26,  4, 24, 44, 20, 26, 48],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([41, 18, 47, 14, 33,  5, 37, 44, 44, 42, 12,  9, 37, 28, 10, 41],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([16])
************************target************************ tensor([27, 38, 32, 50, 39, 13,  0, 12,  3, 44, 29, 38,  2, 29,  5, 12],
       device='cuda:0')
************************outputsoftmax************************ torch.Size([16, 51])
************************target************************ torch.Size([5])
************************target************************ tensor([29, 28, 22, 48, 23], device='cuda:0')
************************outputsoftmax************************ torch.Size([5, 51])
Testing Results: Prec@1 73.494
Classify using the NME Classifier...
Test (NME): [0/120]	Time 0.000 (0.000)	Prec@1 81.250 (81.250)
Test (NME): [100/120]	Time 0.000 (0.000)	Prec@1 81.250 (76.856)
Testing Results (NME): Prec@1 77.528
num_test_videos [1909]
Method : OURS
----AGE 1----
current_task  [98, 96, 18, 90, 75, 31, 95, 49, 43, 78]
current_head  61
Phase 2 : Train RGB Model in an Incremental Manner
=> base model: resnet50
Load the Previous Model
Copy the old Model
lambda_0  : [1.0, 0.022583179581272428]
Increment the Model
SplitCosineLinear(
  input_features=2048, output_features=183, sigma=tensor([3.8396]), eta=tensor([3.1335])
  (fc1): CosineLinear(input_features=2048, output_features=153, sigma=1.0, eta=1.0)
  (fc2): CosineLinear(input_features=2048, output_features=30, sigma=1.0, eta=1.0)
)
video number : 897
video number + exemplar : 1152
DataLoader Constructed : Train 72
Optimizer Constructed
video number : 897
video number + exemplar : 897
Initialize Cosine Classifier
Computing the class mean vectors...
/home/ustc/anaconda3/envs/lhc/lib/python3.7/site-packages/torch/optim/sgd.py:101: UserWarning: optimizer contains a parameter group with duplicate parameters; in future, this will cause an error; see github.com/pytorch/pytorch/issues/40967 for more information
  super(SGD, self).__init__(params, defaults)
Traceback (most recent call last):
  File "main.py", line 102, in <module>
    main()
  File "main.py", line 72, in main
    train_i_cl.train_task(args, i, current_task, current_head, class_indexer, model_flow=model_flow, prefix=prefix)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 531, in train_task
    _train(args, train_loader, model, criterion, optimizer, epoch, age, regularizer=regularizer, lambda_0=lambda_0, model_old=model_old, importance_list=importance_list)
  File "/home/ustc/ls/tcd_code/train/train_i_cl.py", line 70, in _train
    old_feats = model_old.module.base_model.extract_feat_res(input.view((-1, 3) + input.size()[-2:]))
UnboundLocalError: local variable 'input' referenced before assignment